var g=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var m=Object.prototype.hasOwnProperty;var w=(o,e)=>{for(var n in e)g(o,n,{get:e[n],enumerable:!0})},x=(o,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of d(e))!m.call(o,s)&&s!==n&&g(o,s,{get:()=>e[s],enumerable:!(t=l(e,s))||t.enumerable});return o};var y=o=>x(g({},"__esModule",{value:!0}),o);var v={};w(v,{Emitter:()=>r,PostMessage:()=>h});module.exports=y(v);var r=class{_events;constructor(){this._events=new Map}off(e,n){let t=this._events.get(e);t&&(n?t.delete(n):Array.from(t).forEach(s=>t.delete(s)))}offAll(){for(let e of this._events.keys())this.off(e)}on(e,n){let t=this._events.get(e);return t||this._events.set(e,t=new Set),t.add(n),this}trigger(e,n){let t=this._events.get(e);if(t)return Promise.all(Array.from(t).map(s=>s(n)))}listen(e){for(let n in e)this.on(n,e[n]);return this}};var p=(...o)=>console.warn("PostMessage Warn:",...o),u=o=>!!(o&&(o!=null&&o.then));var h=class extends r{target;options;exposes;messageListener;constructor(e,n){super(),this.target=e,this.options=n||{},this.exposes=new Set,this.on("onAddExpose",t=>{t.forEach(s=>{this.exposes.has(s)&&p(`The method: ${s} already exists. Please modify the name, otherwise it will be overwritten`),this.exposes.add(s)})}),this.messageListener=t=>{let s=t.data;if(s&&(!this.options.filterSources||Array.isArray(this.options.filterSources)&&this.options.filterSources.length&&s.source&&this.options.filterSources.includes(s.source))){console.log("message",s,this._events,this.exposes);let{type:i,data:a}=s;this.trigger(i,a)}},e.addEventListener("message",this.messageListener,!1)}removeAllListeners(){this.offAll(),this.target.removeEventListener("message",this.messageListener)}send(e,n,t){let s=t||this.target,i={type:e,data:n,source:this.options.name};s.postMessage(i,"*")}expose(e,n){if(toString.call(e)!=="[object Object]"){console.log("expose accept a object");return}let t=Object.keys(e);this.send("onAddExpose",t,n),t.forEach(s=>{this.off(s),this.on(s,async i=>{let a=e[s],c;if(typeof a=="function"){let f=a(i);u(f)?c=await f:c=f}else c=a;this.send(s,c,n)})})}hasExpose(e){return this.exposes.has(e)}invoke(e,n,t){if(this.hasExpose(e))return new Promise(s=>{this.off(e),this.on(e,i=>{s(i)}),this.send(e,n,t)})}};0&&(module.exports={Emitter,PostMessage});
//# sourceMappingURL=index.js.map